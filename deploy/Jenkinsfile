pipeline {
    agent any

    stages {
        stage('Clear docker environment') {
            steps {
                // the 'or true' part is to prevent the job from failing if no containers are running
                sh 'docker stop $(docker ps -aq) || true'
                sh 'docker rm $(docker ps -aq) || true'
                sh 'docker image prune -af'
                sh 'docker volume prune -f'
            }
        }
        stage('Build env file') {
            steps {
                echo 'Building env file'
                withCredentials([file(credentialsId: 'my-site-env', variable: 'envfile')]) {
                    sh 'cat $envfile > .env'
                }
                
            }
        }
        stage('Check out project') {
            steps {
                echo 'Check out project'
                git branch: 'main', 
                    url: 'https://github.com/cakerste0623/my-site.git'
            }
        }
        
        stage('Build project') {
            steps {
                echo 'Build project'
                sh 'docker compose -f docker-compose.yml up -d'
            }
        }
        
        stage('Run tests') {
            steps {
                echo 'Run tests'
                sh 'docker exec backend python -m pytest'
            }
        }
        
        stage('Tag and push docker images') {
            steps {
                echo 'Tag and push docker images'
                sh 'docker tag collins-site-backend:latest cakerste/collins-site-backend:latest'
                sh 'docker tag collins-site-frontend:latest cakerste/collins-site-frontend:latest'
                
                withCredentials([usernamePassword(credentialsId: 'docker-creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh 'echo $PASSWORD | docker login -u $USERNAME --password-stdin'
                }
                
                sh 'docker push cakerste/collins-site-backend:latest'
                sh 'docker push cakerste/collins-site-frontend:latest'
            }
        }
        
        stage('Update EC2 instance') {
            steps {
                echo 'Update EC2 instance'
            }
        }
    }
}
